local enable = require("config").enable

local default_event = require("config.event").default
local lazy_event = require("config.event").lazy
local insert_enter_event = require("config.event").enter.insert
local cmd_enter_event = require("config.event").enter.cmd
local vim_enter_event = require("config.event").enter.vim

return {
  {
    "nvim-lua/plenary.nvim",
    enabled = enable.plenary,
  },
  {
    "nvim-tree/nvim-web-devicons",
    enabled = enable.dev_icons,
  },
  {
    "nvim-lua/popup.nvim",
    enabled = enable.popup,
  },
  {
    "catppuccin/nvim",
    name = require("config.theme").name,
    lazy = require("config.theme").lazy,
    enabled = enable.theme,
    priority = require("config.theme").priority,
    config = require("config.theme").config,
  },
  {
    'glepnir/dashboard-nvim',
    enabled = enable.dashboard,
    event = vim_enter_event,
    config = require("config.dashboard").config,
    dependencies = require("config.dashboard").dependencies,
  },
  {
    "stevearc/dressing.nvim",
    enabled = enable.dressing,
    init = require("config.dressing").init,
    config = require("config.dressing").config,
  },
  {
    "nvim-lualine/lualine.nvim",
    enabled = enable.lualine,
    event = default_event,
    config = require("config.lualine").config
  },
  {
    "monaqa/dial.nvim",
    event = default_event,
    enabled = enable.dial,
    keys = require("config.dial").keys,
    config = require("config.dial").config,
  },
  {
    "folke/neodev.nvim",
    enabled = enable.neodev,
    event = default_event,
    opts = require("config.neodev").opts,
  },
  {
    'abecodes/tabout.nvim',
    enabled = enable.tabout,
    event = default_event,
    config = require("config.tabout").config,
    wants = { 'nvim-treesitter' },
    after = { 'nvim-cmp' }
  },
  {
    "lukas-reineke/virt-column.nvim",
    event = default_event,
    enabled = enable.virt_column,
    dependencies = require("config.virt-column").dependencies,
    config = require("config.virt-column").config,
  },
  {
    "pmizio/typescript-tools.nvim",
    enabled = enable.typescript,
    event = default_event,
    dependencies = require("config.typescript").dependencies,
    config = require("config.typescript").config,
  },
  {
    "folke/which-key.nvim",
    enabled = enable.which_key,
    event = default_event,
    config = require("config.which-key").config,
  },
  {
    "voldikss/vim-floaterm",
    event = lazy_event,
    enabled = enable.floaterm,
  },
  {
    "Pheon-Dev/harpoon",
    enabled = enable.harpoon,
    config = require("config.harpoon").config,
  },
  {
    "Pheon-Dev/buffalo-nvim",
    enabled = enable.buffalo,
    event = default_event,
    config = require("config.buffalo").config,
  },
  {
    "hrsh7th/nvim-cmp",
    enabled = enable.cmp,
    event = insert_enter_event,
    dependencies = require("config.cmp").dependencies,
    config = require("config.cmp").config,
  },
  {
    "gbprod/yanky.nvim",
    enabled = enable.yanky,
    event = default_event,
    opts = require("config.yanky").opts,
    keys = require("config.yanky").keys,
    config = require("config.yanky").config,
  },
  {
    "nvim-treesitter/nvim-treesitter",
    enabled = enable.treesitter,
    event = default_event,
    build = require("config.treesitter").treesitter_build,
    dependencies = require("config.treesitter").treesitter_dependencies,
    config = require("config.treesitter").treesitter_config,
  },
  {
    'altermo/ultimate-autopair.nvim',
    event = { insert_enter_event, cmd_enter_event },
    branch = require("config.treesitter").autopair_branch,
  },
  {
    "windwp/nvim-ts-autotag",
    enabled = enable.autotag,
    event = default_event,
    config = require("config.treesitter").autotag_config,
  },
  {
    "nvim-treesitter/nvim-treesitter-context",
    enabled = enable.context,
    event = default_event,
    config = require("config.treesitter").treesitter_context_config,
  },
  {
    "RRethy/vim-illuminate",
    enabled = enable.illuminate,
    event = default_event,
    config = require("config.treesitter").illuminate_config,
    keys = require("config.treesitter").illuminate_keys,
  },
  {
    "utilyre/sentiment.nvim",
    event = default_event,
    enabled = enable.sentiment,
    config = true,
  },
  {
    "kylechui/nvim-surround",
    event = default_event,
    enabled = enable.surround,
    config = true,
  },
  {
    "tpope/vim-repeat",
    event = default_event,
    enabled = enable.vim_repeat,
  },
  {
    "brenoprata10/nvim-highlight-colors",
    event = default_event,
    enabled = enable.highlight_colors,
    config = true,
  },
  {
    "chaoren/vim-wordmotion",
    event = default_event,
    enabled = enable.word_motion,
  },
  {
    "lambdalisue/suda.vim",
    event = default_event,
    enabled = enable.suda,
  },
  {
    "Exafunction/codeium.vim",
    event = default_event,
    enabled = enable.codeium,
  },
  {
    "shellRaining/hlchunk.nvim",
    event = default_event,
    enabled = enable.hl_chunk,
    config = require("config.hl_chunk").config,
  },
  {
    "rcarriga/nvim-notify",
    enabled = enable.notify,
    event = default_event,
    config = require("config.notify").config
  },
  {
    "folke/todo-comments.nvim",
    event = default_event,
    enabled = enable.todo_comments,
    config = require("config.todo").config
  },
  {
    "numToStr/Comment.nvim",
    event = default_event,
    enabled = enable.comment,
    dependencies = require("config.comment").dependencies,
    config = require("config.comment").config,
  },
  {
    "folke/flash.nvim",
    event = default_event,
    enabled = enable.flash,
    opts = require("config.flash").opts,
    keys = require("config.flash").keys,
    config = require("config.flash").config,
  },
  {
    "kevinhwang91/nvim-ufo",
    enabled = enable.fold,
    event = default_event,
    dependencies = require("config.fold").dependencies,
    keys = require("config.fold").keys,
    config = require("config.fold").config,
  },
  {
    "lewis6991/gitsigns.nvim",
    enabled = enable.git_signs,
    event = default_event,
    keys = require("config.git").keys,
    config = require("config.git").config,
  },
  {
    "f-person/git-blame.nvim",
    enabled = enable.git_blame,
    event = default_event,
  },
  {
    "ray-x/go.nvim",
    enabled = enable.go,
    dependencies = require("config.go").dependencies,
    config = require("config.go").config,
    -- event = cmd_enter_event,
    -- ft = require("config.go").ft,
    -- build = require("config.go").build,
  },
  {
    "echasnovski/mini.pairs",
    enabled = enable.pairs,
    event = default_event,
    config = true,
  },
  {
    "echasnovski/mini.splitjoin",
    enabled = enable.splitjoin,
    event = default_event,
    config = true,
  },
  {
    "echasnovski/mini.move",
    enabled = enable.move,
    event = default_event,
    config = require("config.move").config,
  },
  {
    "AckslD/muren.nvim",
    enable = enable.muren,
    event = default_event,
    config = require("config.muren").config,
  },
  {
    "nvim-tree/nvim-tree.lua",
    enable = enable.nvim_tree,
    event = default_event,
    cmd = require("config.nvim-tree").cmd,
    config = require("config.nvim-tree").config,
  },
  {
    "folke/noice.nvim",
    event = default_event,
    enabled = enable.noice,
    dependencies = require("config.noice").dependencies,
    config = require("config.noice").config,
  },
  {
    "kevinhwang91/nvim-bqf",
    enabled = enable.bqf,
    event = default_event,
    config = require("config.quickfix").config,
  },
  {
    "saecki/crates.nvim",
    enabled = enable.crates,
    event = require("config.rust").crates_event,
    dependencies = { { "nvim-lua/plenary.nvim" } },
    config = require("config.rust").crates_config,
  },
  {
    "rust-lang/rust.vim",
    enabled = enable.rust_vim,
    event = require("config.rust").rust_vim_event,
    config = require("config.rust").rust_vim_config,
  },
  {
    "simrat39/rust-tools.nvim",
    enabled = enable.rust_tools,
    event = require("config.rust").rust_tools_event,
    dependencies = require("config.rust").rust_tools_dependencies,
    config = require("config.rust").rust_tools_config,
  },
  {
    'declancm/cinnamon.nvim',
    event = default_event,
    enabled = enable.scroll,
    config = require("config.scroll").config,
  },
  {
    "nvim-treesitter/nvim-treesitter-textobjects",
    enabled = enable.treesitter_textobjects,
  },
  {
    "chrisgrieser/nvim-various-textobjs",
    enabled = enable.various_textobjects,
    event = default_event,
    opts = require("config.text-objects").various_opts,
    config = require("config.text-objects").various_config,
  },
  {
    "glts/vim-textobj-comment",
    enabled = enable.comment_textobjects,
    keys = require("config.text-objects").comment_keys,
    dependencies = require("config.text-objects").comment_dependencies,
  },
  {
    "wellle/targets.vim",
    event = default_event,
    enabled = enable.targets,
  },
}
